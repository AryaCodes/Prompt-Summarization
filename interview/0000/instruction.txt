You are given $n$ different binary words. A word is called binary if it contains only characters '0' and '1'.

There are four possible words:
1. Words that start and end with $1$
2. Words that start and end with $0$
3. Words that start with $1$ and end with $0$
4. Words that start with $0$ and end with $1$

If there are only words of type 1 or only words of type 2, then no words need to be reversed.
If there is a word of type 1 and type 2 and there are no words of type 3 or 4, then there is no possible solution.
If the difference between the number of type 3 and type 4 words differs by more than 1, then you should reverse a word
from the type that has more occurances, if the reversed word is not already in the list. You should continue reversing words
until the difference between the number of type 3 and type 4 words is less than 2.

-----Input-----

The first line of the input contains one integer $t$ ($1 \le t \le 10^4$) — the
number of test cases in the input. Then $t$ test cases follow.

The first line of a test case contains one integer $n$ ($1 \le n \le
2\cdot10^5$) — the number of words in the list. Next $n$ lines contain these
words. The sum of word lengths doesn't exceed $4\cdot10^6$. All words are different.


-----Output-----

Print answer for all of $t$ test cases in the order they appear.

If there is no answer for the test case, print -1. Otherwise, the first line of
the output should contain $k$ ($0 \le k \le n$) — the minimal number of words
in the set which should be reversed. The second line of the output should
contain $k$ distinct integers — the indexes of the words in the set which
should be reversed. Words are numerated from $1$ to $n$ in the order they
appear. If $k=0$ you can skip this line (or you can print an empty line). If
there are many answers you can print any of them.

-----Example-----
Input
4
4
0001
1000
0011
0111
3
010
101
0
2
00000
00001
4
01
001
0001
00001

Output
1
3 
-1
0

2
1 2
